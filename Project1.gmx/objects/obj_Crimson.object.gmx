<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_CrimsonStand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Boss</parentName>
  <maskName>spr_CrimsonMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
/* state = STATE_NONE; //stany postaci, STATE_NONE jest przypisany tylko do parenta, normalny obiekt dziedziczacy nie powinien z niego korzystac
dead = false;       //czy postac jest martwa czy zywa

dmgObject = instance_create(0,0,obj_DR);
resObject = instance_create(16,0,obj_DR);

hpMax = 0;
hp = 0;

staminaMax = 0;
stamina = 0;
-
mvSpeed = 0; //szybkosc poruszania sie
hspd = 0;
vspd = 0;

expirience = 0;// ile dostaniemy expa za przeciwnika

atSpeed = 0; //predkosc ataku
attacking = false; //czy atakuje*/

state = STATE_NONE;

hpMax = 600;
hp = hpMax;

staminaMax = 100;
stamina = staminaMax;
staminaReg = 0.8;

mvSpeed = 4;

sprite_stand = spr_CrimsonStand;
sprite_jump = spr_CrimsonJumpAttack;
sprite_attack = spr_CrimsonHandAttack;
sprite_move = spr_CrimsonRun;

towards = false;
created = false;

encounter = false;
slamDmg = instance_create(0,32,obj_DR);

scr_DRSet(resObject,0,0,0,0,0,0,1);
scr_DRSet(dmgObject,10,25,0,0,0,0,15);
scr_DRSet(slamDmg,0,0,30,0,0,0,20);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var level = choose(1,2,2,3);

if (level == 1)
{
    repeat(6)
    {
    var xx = irandom_range(320,896);
    var yy = irandom_range(3376,3392);
    var spawn = choose(obj_UnarmedGoblinDagger, obj_UnarmedGoblinMaczuga, obj_UnarmedGoblinAxe, obj_UnarmedGoblinProca, obj_UnarmedGoblinKusza, obj_UnarmedGoblin,obj_SmallBat);
    instance_create(xx,yy,spawn);
    }
alarm[0] = 10*room_speed;
}
else if (level == 2)
{
    repeat(4)
    {
    var xx = irandom_range(320,896);
    var yy = irandom_range(3376,3392);
    var spawn = choose(obj_LeatherGoblinDagger, obj_LeatherGoblinMaczuga, obj_LeatherGoblinAxe, obj_LeatherGoblinProca, obj_LeatherGoblinKusza, obj_LeatherGoblin,obj_Bat);
    instance_create(xx,yy,spawn);
    }
alarm[0] = 15*room_speed;
}
else if (level == 3)
{
    repeat(2)
    {
    var xx = irandom_range(320,896);
    var yy = irandom_range(3376,3392);
    var spawn = choose(obj_PlateGoblinDagger, obj_PlateGoblinMaczuga, obj_PlateGoblinAxe, obj_PlateGoblinProca, obj_PlateGoblinKusza, obj_PlateGoblin,obj_BigBat);
    instance_create(xx,yy,spawn);
    }
alarm[0] = 20*room_speed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///BEHAVIOR
event_inherited();

scr_EnemyGravity();

if (!encounter)
{
    if (!collision_line(x,y-8,obj_Hero.x,obj_Hero.y-8,obj_Solid,1,1))
    {
        if (distance_to_object(obj_Hero)&lt;300)
        {
            encounter = true;
            sound_stop_all();
            sound_loop(m_Boss);        
            event_user(1);
        }
    }
}
else
{
    stamina += staminaReg;
    stamina = clamp(stamina,0,staminaMax);
    
    if (state != STATE_CLIMB &amp;&amp; state != STATE_SHOOT)   //STOI ALBO IDZIE
    {
        if (stamina &lt; 20)
        {
            state = STATE_NONE;
        }
        else
        {
            if (distance_to_point(obj_Hero.x,y)&gt;25) //jezeli bohater jest troche dalej to go gon! To go kurde gon!
            {
                state = STATE_MOVE;
                hspd = mvSpeed*image_xscale;
            }
            else    //jezeli bohater jest blisko
            {
                if (!obj_Hero.dead)
                {
                    if (distance_to_object(obj_Hero) &gt;= 15 &amp;&amp; distance_to_object(obj_Hero) &lt;=25)
                    {
                        hspd = 0;
                        state = STATE_SHOOT;
                        image_index = 0; 
                        stamina -= 10;      
                        sound_play(choose(s_CrimAttack1,s_CrimAttack2));     
                    }
                    else if (distance_to_object(obj_Hero) &lt;15 || place_meeting(x,y,obj_Hero))
                    {
                        state = STATE_CLIMB;
                        vspd = -10;
                        hspd = 0;
                        stamina -= 30;
                        sound_play(choose(s_CrimJump1,s_CrimJump2));
                    }  
                } 
            }
        }
    }
    else if (state == STATE_CLIMB)  //WYSKOK I SPADEK
    {
        if (vspd&gt;=0 &amp;&amp; !towards)
        {
            towards = true;
            move_towards_point(obj_Hero.x,obj_Hero.y,10);
        }
        if (towards &amp;&amp; place_meeting_solid(x,y))
        {
            towards = false;
            speed = 0;
            vspd = 0;
            state = STATE_NONE;
            
            //Wychodzenie z ziemi
            for (var i = 0; i&lt;20; i++)
            {
                if (!place_meeting_solid(x,y-i))
                {
                    y-=i;
                    break;
                }
            }
            slam = instance_create(x,y,obj_DamageSlam);        
            slam.dmg = slamDmg;
            instance_create(x,y,obj_SlamEffect);
        }        
    }
    else if (state == STATE_SHOOT)  //ATAK REKA
    {
        if (round(image_index) &gt; 1 &amp;&amp; created == false)
        {
            if (object_get_name(id.object_index)=="obj_Crimson")
                hspd = image_xscale;
            created = true;
            scr_ActorCreateDamage(18,12,obj_DamageSlash);
        }
    
        if (round(image_index) &gt; 2)
        {
            hspd = 0;
            created = false;
            state = STATE_NONE;
        }
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sound_play(choose(s_CrimHit1,s_CrimHit2));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 10*room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sound_stop_all();
room_goto(room_Outro);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
